{"version":3,"sources":["components/notification/Notification.module.css","components/filter/Filter.module.css","components/section/Section.module.css","components/list/List.module.css","redux/actions/contactsActions.js","components/notification/Notification.js","components/form/Form.js","components/section/Section.js","components/listItem/ListItem.js","components/list/List.js","components/filter/Filter.js","components/tracker/ContactsTracker.js","App.js","redux/reducer/contactsReducer.js","redux/store.js","index.js","components/listItem/ListItem.module.css","components/form/Form.module.css"],"names":["module","exports","addContact","createAction","contact","payload","id","uuidv4","update","deleteContact","updateContact","filterContacts","changeAlert","resetSelected","addToSelected","changeContact","getContacts","connect","state","name","contactsArr","repeatName","dispatch","useEffect","timer","setTimeout","clearTimeout","className","notStyles","alertWrapper","alertText","toUpperCase","slice","initialState","number","alertFlag","alert","selectedContact","useState","setState","buttonActive","handleChange","e","target","value","prev","onSubmit","preventDefault","styles","form","label","type","onChange","input","disabled","formButton","Section","children","section","ListItem","onUpdate","onDelete","updatedClass","updated","textUpdatedClass","wrapper","inputHide","itemLabel","data-id","checked","inputItem","onClick","button","contacts","filter","toLowerCase","includes","filterValue","onUpdateItem","handleDelete","dataset","list","map","filterInput","useDispatch","App","contactsReducer","createReducer","action","some","localStorage","setItem","JSON","stringify","find","item","getItem","contactsFromStorage","parse","filterReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,kC,mBCAhFD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,OAAS,yB,mBCArED,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,mKCKZC,EAAWC,YAAa,eAAc,SAAAC,GAAO,MAAG,CAC3DC,QAAQ,2BAAKD,GAAN,IAAeE,GAAGC,cAASC,QAAO,QAG9BC,EAAgBN,YAAa,kBAE7BO,EAAcP,YAAa,kBAE3BQ,EAAeR,YAAa,iBAE5BS,EAAcT,YAAa,gBAE3BU,EAAgBV,YAAa,kBAE7BW,EAAgBX,YAAa,mBAE7BY,EAAgBZ,YAAa,kBAE7Ba,EAAcb,YAAa,gB,iBCYzBc,eAfO,SAACC,GACrB,MAAM,CACJC,KAAKD,EAAME,YAAYC,eAIF,SAACC,GAExB,MAAM,CACJV,YAAa,WACXU,EAASV,SAKAK,EA/BM,SAAC,GAAwB,IAAvBE,EAAsB,EAAtBA,KAAKP,EAAiB,EAAjBA,YAS1B,OAPAW,qBAAU,WACR,IAAMC,EAAQC,YAAW,WAAKb,MAAe,KAC7C,OAAO,WACLc,aAAaF,MAEf,IAGA,qBAAKG,UAAWC,IAAUC,aAA1B,SACE,oBAAGF,UAAWC,IAAUE,UAAxB,UAAoCX,GAAQA,EAAK,GAAGY,cAAcZ,EAAKa,MAAM,GAA7E,qCCTAC,EAAa,CACjBd,KAAK,GACLe,OAAO,IAwEMjB,eAvBO,SAACC,GACrB,MAAO,CACLiB,UAAUjB,EAAME,YAAYgB,MAC5BC,gBAAgBnB,EAAME,YAAYiB,oBAIb,SAACf,GACxB,MAAO,CACLpB,WAAY,SAACE,GACXkB,EAASpB,EAAWE,KAGtBW,cAAe,SAACX,GACdkB,EAASP,EAAcX,KAGzBS,cAAc,WACZS,EAAST,SAKAI,EApEF,SAAC,GAAwE,IAAvEf,EAAsE,EAAtEA,WAAWiC,EAA2D,EAA3DA,UAAUE,EAAiD,EAAjDA,gBAAgBtB,EAAiC,EAAjCA,cAAcF,EAAmB,EAAnBA,cAAmB,EAE1DyB,mBAAS,eAAIL,IAF6C,mBAE5Ef,EAF4E,KAEtEqB,EAFsE,KAG7EC,GAActB,EAAMC,OAAQD,EAAMgB,OAExCX,qBAAU,WACSgB,EAAlBF,EAA2B,eAAIA,GAA6B,eAAIJ,MAC/D,CAACI,IAEH,IAAMI,EAAa,SAAAC,GAAI,IAAD,EACCA,EAAEC,OAAhBxB,EADa,EACbA,KAAKyB,EADQ,EACRA,MACZL,GAAS,SAAAM,GAAI,kCAAOA,GAAP,kBAAa1B,EAAMyB,QAclC,OACE,qCACCT,GAAc,cAAC,EAAD,CAAchB,KAAMD,EAAMC,OAEzC,uBAAM2B,SAfW,SAAAJ,GACjBA,EAAEK,iBAEFV,EACAtB,EAAcG,GACdhB,EAAWgB,GAEXqB,EAAS,eAAIN,IACbpB,KAO8Bc,UAAWqB,IAAOC,KAAhD,UACE,wBAAOtB,UAAWqB,IAAOE,MAAzB,kBACE,uBAAOC,KAAK,OAAOP,MAAO1B,EAAMC,KAAMA,KAAK,OAAOiC,SAAUX,EAAcd,UAAWqB,IAAOK,WAG9F,wBAAO1B,UAAWqB,IAAOE,MAAzB,oBACE,uBAAOC,KAAK,OAAOP,MAAO1B,EAAMgB,OAAQf,KAAK,SAASiC,SAAUX,EAAcd,UAAWqB,IAAOK,WAGnG,wBAAQF,KAAK,SAASG,SAAUd,EAAcb,UAAWqB,IAAOO,WAAhE,SAA6ElB,EAAkB,eAAiB,yB,QC1CtGmB,EANC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACA,yBAAS9B,UAAW+B,UAApB,SAA8BD,K,+BCyBjBE,EA3BE,SAAC,GAA+D,IAA9DrD,EAA6D,EAA7DA,GAAGa,EAA0D,EAA1DA,KAAKe,EAAqD,EAArDA,OAAO1B,EAA8C,EAA9CA,OAAOoD,EAAuC,EAAvCA,SAASC,EAA8B,EAA9BA,SAASxB,EAAqB,EAArBA,gBAEnDyB,EAAetD,EAASwC,IAAOe,QAAUf,IAAO,eAChDgB,EAAmBxD,EAASwC,IAAO,gBAAkBA,IAAO,oBAGlE,OACE,qBAAIrB,UAAamC,EAAjB,UACA,uBAAMnC,UAAaqC,EAAnB,UAAsC7C,EAAtC,IAA6Ce,KAE7C,sBAAKP,UAAaqB,IAAOiB,QAAzB,UAEE,wBAAOtC,UAAaU,GAAmBA,EAAgB/B,KAAMA,EAAK0C,IAAOkB,UAAYlB,IAAOmB,UAA5F,oBAEF,uBAAOhB,KAAK,WAAWiB,UAAS9D,EAAI8C,SAAUQ,EAAUS,QAAS7D,EACjEmB,UAAaU,GAAmBA,EAAgB/B,KAAMA,EAAK0C,IAAOkB,UAAUlB,IAAOsB,eAI/E,wBAAQnB,KAAK,SAASiB,UAAS9D,EAAIiE,QAASV,EAAUlC,UAAWqB,IAAOwB,OACtElB,YAAUjB,GAAmBA,EAAgB/B,KAAMA,GADrD,2BC0COW,eA3BO,SAACC,GACrB,MAAM,CACJuD,SAAS,YAAIvD,EAAME,YAAYqD,SAASC,QAAO,SAAAtE,GAAO,OAAGA,EAAQe,KAAKwD,cACnEC,SAAS1D,EAAM2D,YAAYF,mBAC9BtC,gBAAgBnB,EAAME,YAAYiB,gBAClCyC,aAAa5D,EAAME,YAAY0D,iBAIV,SAACxD,GACxB,MAAM,CACJb,cAAc,SAACH,GACbgB,EAASb,EAAcH,KAEzBI,cAAc,SAACJ,GACbgB,EAASZ,EAAcJ,KAEzBQ,cAAc,SAACR,GACbgB,EAASR,EAAcR,KAEzBO,cAAc,WACZS,EAAST,SAMAI,EAzDF,SAAC,GAAwF,IAAvFwD,EAAsF,EAAtFA,SAAShE,EAA6E,EAA7EA,cAAcC,EAA+D,EAA/DA,cAAcI,EAAiD,EAAjDA,cAAcD,EAAmC,EAAnCA,cAAcwB,EAAqB,EAArBA,gBAGxE0C,EAAa,SAAArC,GACjBjC,EAAciC,EAAEC,OAAOqC,QAAQ1E,KAG3BmC,EAAa,SAAAC,GACjBhC,EAAcgC,EAAEC,OAAOqC,QAAQ1E,IAE/BoC,EAAEC,OAAO0B,QACPvD,EAAc4B,EAAEC,OAAOqC,QAAQ1E,IAC/BO,KAIJ,OACE,oBAAIc,UAAasD,OAAjB,SACGR,EAASS,KAAI,SAAA9E,GAAO,OACrB,cAAC,EAAD,2BAEMA,GAFN,IAGEiC,gBAAiBA,EACjBuB,SAAUnB,EACVoB,SAAUkB,IAJL3E,EAAQE,Y,iBCQNW,eAfO,SAACC,GACrB,MAAM,CACJwD,OAAOxD,EAAM2D,gBAIQ,SAACvD,GACxB,MAAM,CACJX,eAAe,SAACiC,GACdtB,EAASX,EAAeiC,QAMf3B,EA9BA,SAAC,GAA6B,IAA5ByD,EAA2B,EAA3BA,OAAO/D,EAAoB,EAApBA,eAMtB,OACE,sBAAKgB,UAAWqB,IAAO0B,OAAvB,UACE,0DACE,uBAAOvB,KAAK,OAAOP,MAAO8B,EAAQtB,SAPrB,SAAAV,GACjB/B,EAAe+B,EAAEC,OAAOC,QAMsCjB,UAAWqB,IAAOmC,iBACtE,6BCoBClE,eAPO,SAACC,GACrB,MAAO,CACLmB,gBAAgBnB,EAAME,YAAYiB,mBAKC,KAAxBpB,EAzBS,WACxB,IAAMK,EAAW8D,cAKf,OAJA7D,qBAAU,WACRD,EAASN,OACT,IAGA,mCACA,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCZSqE,I,EAAAA,EARf,WACE,OACE,qBAAK1D,UAAU,MAAf,SACE,cAAC,EAAD,O,eCEAM,EAAa,CACjBwC,SAHiB,GAIjBrC,OAAM,EACNf,WAAW,GACXgB,gBAAgB,MAKZiD,EAAkBC,YAAc,eAAItD,IAAL,mBAClC/B,GAAY,SAACgB,EAAMsE,GAClB,OAAGtE,EAAMuD,SAASgB,MAAK,SAAArF,GAAO,OAAEA,EAAQe,KAAKwD,gBAAkBa,EAAOnF,QAAQc,KAAKwD,kBACjFe,aAAaC,QAAQ,WAAWC,KAAKC,UAAL,YAAmB3E,EAAMuD,YAClD,2BAAIvD,GAAX,IAAiBkB,OAAOlB,EAAMkB,MAAMf,WAAWmE,EAAOnF,QAAQc,SAE9DuE,aAAaC,QAAQ,WAAWC,KAAKC,UAAL,sBAAmB3E,EAAMuD,UAAzB,CAAkCe,EAAOnF,YAClE,2BAAIa,GAAX,IAAiBuD,SAAS,GAAD,mBAAKvD,EAAMuD,UAAX,CAAoBe,EAAOnF,gBAPrB,cAWlCI,GAAe,SAACS,EAAMsE,GAErB,OADAE,aAAaC,QAAQ,WAAYC,KAAKC,UAAL,YAAmB3E,EAAMuD,SAASC,QAAO,SAAAtE,GAAO,OAAEA,EAAQE,KAAOkF,EAAOnF,cAClG,2BAAIa,GAAX,IAAiBuD,SAAS,YAAIvD,EAAMuD,SAASC,QAAO,SAAAtE,GAAO,OAAEA,EAAQE,KAAOkF,EAAOnF,iBAblD,cAelCK,GAAe,SAACQ,EAAMsE,GACrB,OAAO,2BAAItE,GAAX,IAAiBuD,SAAS,YAAIvD,EAAMuD,SAASS,KAAI,SAAA9E,GAAO,OAAEA,EAAQE,KAAKkF,EAAOnF,QAApB,2BACtDD,GADsD,IAC7CI,QAASJ,EAAQI,SAAUJ,WAjBP,cAmBlCQ,GAAa,SAACM,GACb,OAAO,2BAAIA,GAAX,IAAiBkB,OAAOlB,EAAMkB,MAAOf,WAAW,QApBf,cAsBlCR,GAAe,SAACK,EAAMsE,GACrB,kCAAUtE,GAAV,IAAgBmB,gBAAgB,UAvBC,cAyBlCvB,GAAe,SAACI,EAAMsE,GACrB,OAAGtE,EAAMuD,SAASqB,MAAK,SAAA1F,GAAO,OAAEA,EAAQE,KAAOkF,EAAOnF,WAC7C,2BAAIa,GAAX,IAAiBmB,gBAAgB,eAAInB,EAAMuD,SAASqB,MAAK,SAAA1F,GAAO,OAAEA,EAAQE,KAAOkF,EAAOnF,cAEjFa,KA7BwB,cAgClCH,GAAe,SAACG,EAAMsE,GACrB,kCAAUtE,GAAV,IAAgBuD,SAAS,YAAIvD,EAAMuD,SAASS,KAAI,SAAAa,GAAI,OAAEA,EAAKzF,KAAKkF,EAAOnF,QAAQC,GAAzB,2BAC5CyF,GAD4C,IACvC5E,KAAKqE,EAAOnF,QAAQc,KAAMe,OAAQsD,EAAOnF,QAAQ6B,OAAO1B,QAAO,IADxB,eACmCuF,YAlCxD,cAoClC/E,GAAa,SAACE,EAAMsE,GACnB,GAAGE,aAAaM,QAAQ,YAAY,CAClC,IAAMC,EAAsBL,KAAKM,MAAMR,aAAaM,QAAQ,aAC5D,OAAO,2BAAI9E,GAAX,IAAiBuD,SAAS,GAAD,mBAAKvD,EAAMuD,UAAX,YAAuBwB,MAEhD,OAAO/E,KAzCwB,IA8C/BiF,EAAgBZ,YAAc,GAAD,eAChC5E,GAAgB,SAACO,EAAMsE,GACtB,OAAaA,EAAOnF,YAkGX+F,EAAYC,0BAAgB,CACvCjF,YAAakE,EACbT,YAAasB,ICzJAG,EAJDC,YAAe,CAC3BC,QAASJ,ICAXK,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,U,kBCX1B5G,EAAOC,QAAU,CAAC,mBAAmB,mCAAmC,eAAe,+BAA+B,QAAU,0BAA0B,QAAU,0BAA0B,cAAc,8BAA8B,UAAY,4BAA4B,OAAS,yBAAyB,qBAAqB,qCAAqC,iBAAiB,mC,kBCA/XD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,WAAa,4B","file":"static/js/main.cf707b2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertWrapper\":\"Notification_alertWrapper__25itf\",\"alertText\":\"Notification_alertText__yefAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2lMv0\",\"filter\":\"Filter_filter__iCkXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3EEQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__1SGp8\"};","import {ADDCONTACT,DELETECONTACT,FILTERCONTACT,UPDATECONTACT,CHANGEALERT,RESETSELECTED,ADDTOSELECTED,CHANGECONTACT,GETCONTACTS} from '../constants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n// ==========================Redux Tollkit===========================================\r\n\r\nexport const addContact=createAction(\"ADD_CONTACT\",contact=>({\r\n  payload: {...contact, id:uuidv4(),update:false}\r\n}));\r\n\r\nexport const deleteContact = createAction(\"DELETE_CONTACT\");\r\n\r\nexport const updateContact=createAction(\"UPDATE_CONTACT\");\r\n\r\nexport const filterContacts=createAction(\"FILER_CONTACT\");\r\n\r\nexport const changeAlert = createAction(\"CHANGE_ALERT\");\r\n\r\nexport const resetSelected = createAction(\"RESET_SELECTED\");\r\n\r\nexport const addToSelected = createAction(\"ADD_TO_SELECTED\");\r\n\r\nexport const changeContact = createAction(\"CHANGE_CONTACT\");\r\n\r\nexport const getContacts = createAction(\"GET_CONTACTS\");\r\n\r\n// ====================================Redux===========================================\r\n\r\n// export const deleteCamp = createAction(\"@bootCamps/deleteCamp\");\r\n// export const setFilter = createAction(\"@bootCamps/setFilter\");\r\n// export const setAlert = createAction(\"@bootCamps/setALERT\");\r\n// export const addNewCamp = createAction(\"@bootCamps/adNewCamp\",(data)=>({\r\n//     payload:{...data, id: uuidv4()\r\n// },\r\n// }));\r\n\r\n// const ADDCONTACT = \"ADD_CONTACT\";\r\n// const DELETECONTACT = \"DELETE_CONTACT\";\r\n// const FILTERCONTACT = \"FILER_CONTACT\";\r\n// const UPDATECONTACT = \"UPDATE_CONTACT\";\r\n// const CHANGEALERT = \"CHANGE_ALERT\";\r\n// const RESETSELECTED = \"RESET_SELECTED\";\r\n// const ADDTOSELECTED = \"ADD_TO_SELECTED\";\r\n// const CHANGECONTACT = \"CHANGE_CONTACT\";\r\n// const CHEKUPDATEDITEMS=\"CHECK_UPDATED_ITEMS\";\r\n// const GETCONTACTS = \"GET_CONTACTS\";\r\n\r\n// export const addContact=(contact)=>{\r\n//   return{\r\n//     type: ADDCONTACT,\r\n//     payload: {...contact, id:uuidv4(),update:false}\r\n//   }\r\n// };\r\n\r\n// export const updateContact=(id)=>{\r\n//   return{\r\n//     type:UPDATECONTACT,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const deleteContact=(id)=>{\r\n//   return{\r\n//     type:DELETECONTACT,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const filterContacts=(value)=>{\r\n  //   return{\r\n  //     type:FILTERCONTACT,\r\n  //     payload:value\r\n  //   }\r\n  // }\r\n\r\n  // export const changeAlert=()=>{\r\n    //   return{\r\n    //     type:CHANGEALERT\r\n    //   }\r\n    // }\r\n\r\n    // export const resetSelected=()=>{\r\n    //   return{\r\n    //     type:RESETSELECTED\r\n    //   }\r\n    // }\r\n\r\n\r\n// export const addToSelected=(id)=>{\r\n//   return{\r\n//     type:ADDTOSELECTED,\r\n//     payload:id\r\n//   }\r\n// }\r\n\r\n// export const changeContact=(contact)=>{\r\n//   return{\r\n//     type:CHANGECONTACT,\r\n//     payload:contact\r\n//   }\r\n// }\r\n\r\n// export const getContacts=()=>{\r\n//   return{\r\n//     type:GETCONTACTS\r\n//   }\r\n// }\r\n\r\n// ============================================================================\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useEffect} from 'react';\r\nimport notStyles from './Notification.module.css';\r\nimport {connect} from 'react-redux';\r\nimport {changeAlert} from '../../redux/actions/contactsActions';\r\n\r\nconst Notification = ({name,changeAlert}) => {\r\n\r\n  useEffect(()=>{\r\n    const timer = setTimeout(()=>{changeAlert()},2000);\r\n    return ()=>{\r\n      clearTimeout(timer);\r\n    }\r\n  },[]);\r\n\r\n  return(\r\n    <div className={notStyles.alertWrapper}>\r\n      <p className={notStyles.alertText}>{name && name[0].toUpperCase()+name.slice(1)} is already in the list!!!</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    name:state.contactsArr.repeatName\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n  return{\r\n    changeAlert: ()=>{\r\n      dispatch(changeAlert())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Notification);\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport styles from './Form.module.css';\r\nimport {addContact, changeContact,resetSelected} from '../../redux/actions/contactsActions';\r\nimport {connect} from 'react-redux';\r\nimport Notification from '../notification/Notification';\r\n\r\n\r\nconst initialState={\r\n  name:\"\",\r\n  number:\"\",\r\n\r\n}\r\n\r\nconst Form = ({addContact,alertFlag,selectedContact,changeContact,resetSelected}) => {\r\n\r\n  const [state,setState] = useState({...initialState});\r\n  const buttonActive =state.name && state.number? false:true;\r\n\r\n  useEffect(()=>{\r\n   selectedContact ? setState({...selectedContact}) : setState({...initialState});\r\n  },[selectedContact]);\r\n\r\n  const handleChange=e=>{\r\n    const {name,value} = e.target;\r\n    setState(prev=>({...prev,[name]:value}))\r\n  }\r\n\r\n  const handleSubmit=e=>{\r\n    e.preventDefault();\r\n\r\n    selectedContact?\r\n    changeContact(state):\r\n    addContact(state);\r\n\r\n    setState({...initialState});\r\n    resetSelected();\r\n  }\r\n\r\n  return(\r\n    <>\r\n    {alertFlag &&  <Notification name={state.name}/>}\r\n\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.label}> Name\r\n        <input type=\"text\" value={state.name} name=\"name\" onChange={handleChange} className={styles.input}/>\r\n      </label>\r\n\r\n      <label className={styles.label}> Number\r\n        <input type=\"text\" value={state.number} name=\"number\" onChange={handleChange} className={styles.input}/>\r\n      </label>\r\n\r\n     <button type=\"submit\" disabled={buttonActive} className={styles.formButton}>{selectedContact ? \"Save contact\" : \"Add contact\"}</button>\r\n\r\n    </form>\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    alertFlag:state.contactsArr.alert,\r\n    selectedContact:state.contactsArr.selectedContact\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n    addContact: (contact)=>{\r\n      dispatch(addContact(contact))\r\n    },\r\n\r\n    changeContact: (contact)=>{\r\n      dispatch(changeContact(contact))\r\n    },\r\n\r\n    resetSelected:()=>{\r\n      dispatch(resetSelected())\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Form);\r\n\r\n","import React from 'react';\r\nimport {section} from './Section.module.css';\r\n\r\nconst Section = ({children}) => {\r\n  return(\r\n  <section className={section}>{children}</section>\r\n  )\r\n};\r\n\r\nexport default Section;\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './ListItem.module.css';\r\n\r\nconst ListItem = ({id,name,number,update,onUpdate,onDelete,selectedContact}) => {\r\n\r\n  const updatedClass = update ? styles.updated : styles['not-updated'];\r\n  const textUpdatedClass = update ? styles['text-updated'] : styles['text-not-updated'];\r\n  // const buttonUpdatedClass= update ? styles['button-updated'] : styles['button-not-updated'];\r\n\r\n  return(\r\n    <li className = {updatedClass}>\r\n    <span className = {textUpdatedClass}>{name}:{number}</span>\r\n\r\n    <div className = {styles.wrapper}>\r\n\r\n      <label className = {selectedContact && selectedContact.id !==id ? styles.inputHide : styles.itemLabel}> Update\r\n\r\n    <input type=\"checkbox\" data-id={id} onChange={onUpdate} checked={update}\r\n    className = {selectedContact && selectedContact.id !==id ? styles.inputHide:styles.inputItem }/>\r\n\r\n      </label>\r\n\r\n        <button type=\"button\" data-id={id} onClick={onDelete} className={styles.button}\r\n          disabled={selectedContact && selectedContact.id ===id ? true:false}>Delete</button>\r\n\r\n    </div>\r\n  </li>\r\n  )\r\n};\r\n\r\nexport default ListItem;\r\n\r\n","import React from 'react';\r\nimport {deleteContact,resetSelected,updateContact,addToSelected} from '../../redux/actions/contactsActions';\r\nimport {list} from './List.module.css';\r\n\r\nimport {connect} from 'react-redux';\r\nimport ListItem from '../listItem/ListItem';\r\n\r\nconst List = ({contacts,deleteContact,updateContact,addToSelected,resetSelected,selectedContact}) => {\r\n\r\n\r\n  const handleDelete=e=>{\r\n    deleteContact(e.target.dataset.id)\r\n  }\r\n\r\n  const handleChange=e=>{\r\n    updateContact(e.target.dataset.id);\r\n\r\n    e.target.checked?\r\n      addToSelected(e.target.dataset.id):\r\n      resetSelected();\r\n\r\n  }\r\n\r\n  return(\r\n    <ul className = {list}>\r\n      {contacts.map(contact=>(\r\n      <ListItem\r\n        key={contact.id}\r\n        {...contact}\r\n        selectedContact={selectedContact}\r\n        onUpdate={handleChange}\r\n        onDelete={handleDelete}/>\r\n      ))}\r\n    </ul>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    contacts:[...state.contactsArr.contacts.filter(contact=>(contact.name.toLowerCase())\r\n      .includes(state.filterValue.toLowerCase()))],\r\n    selectedContact:state.contactsArr.selectedContact,\r\n    onUpdateItem:state.contactsArr.onUpdateItem\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    deleteContact:(id)=>{\r\n      dispatch(deleteContact(id))\r\n    },\r\n    updateContact:(id)=>{\r\n      dispatch(updateContact(id))\r\n    },\r\n    addToSelected:(id)=>{\r\n      dispatch(addToSelected(id))\r\n    },\r\n    resetSelected:()=>{\r\n      dispatch(resetSelected())\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(List);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {filterContacts} from '../../redux/actions/contactsActions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({filter,filterContacts}) => {\r\n\r\n  const handleChange=e=>{\r\n    filterContacts(e.target.value);\r\n  }\r\n  \r\n  return(\r\n    <div className={styles.filter}>\r\n      <label>Find contacts by name\r\n        <input type=\"text\" value={filter} onChange={handleChange} className={styles.filterInput}/>\r\n      </label><br/>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    filter:state.filterValue\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    filterContacts:(value)=>{\r\n      dispatch(filterContacts(value))\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React,{useEffect} from 'react';\r\nimport {connect,useDispatch} from 'react-redux';\r\n\r\nimport Form from '../form/Form';\r\nimport Section from '../section/Section';\r\nimport List from '../list/List';\r\nimport Filter from '../filter/Filter';\r\nimport {getContacts} from '../../redux/actions/contactsActions';\r\n\r\n\r\nconst ContactsTracker = () => {\r\nconst dispatch = useDispatch();\r\n  useEffect(()=>{\r\n    dispatch(getContacts());\r\n  },[]);\r\n\r\n  return(\r\n    <>\r\n    <Section>\r\n      <h1>Phonebook</h1>\r\n      <Form/>\r\n      <Filter/>\r\n      <List/>\r\n    </Section>\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n    selectedContact:state.contactsArr.selectedContact\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,null)(ContactsTracker);\r\n\r\n\r\n","import ContactsTracker from './components/tracker/ContactsTracker';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ContactsTracker/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {ADDCONTACT,DELETECONTACT,FILTERCONTACT,UPDATECONTACT,CHANGEALERT,ADDTOSELECTED, RESETSELECTED,CHANGECONTACT,GETCONTACTS} from '../constants';\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact,deleteContact,updateContact,filterContacts, changeAlert, resetSelected,addToSelected,changeContact,getContacts} from '../actions/contactsActions';\r\n\r\nconst initialArray=[];\r\n\r\nconst initialState={\r\n  contacts: initialArray,\r\n  alert:false,\r\n  repeatName:\"\",\r\n  selectedContact:null,\r\n}\r\n\r\n// ==============================================Redux Toolkit==============================================\r\n\r\nconst contactsReducer = createReducer({...initialState},{\r\n  [addContact]:(state,action)=>{\r\n    if(state.contacts.some(contact=>contact.name.toLowerCase() === action.payload.name.toLowerCase())){\r\n      localStorage.setItem('contacts',JSON.stringify([...state.contacts]))\r\n      return {...state,alert:!state.alert,repeatName:action.payload.name};\r\n    } else {\r\n      localStorage.setItem('contacts',JSON.stringify([...state.contacts,action.payload]))\r\n      return {...state,contacts:[...state.contacts,action.payload]};\r\n    }\r\n  },\r\n\r\n  [deleteContact]:(state,action)=>{\r\n    localStorage.setItem('contacts', JSON.stringify([...state.contacts.filter(contact=>contact.id !== action.payload)]))\r\n    return {...state,contacts:[...state.contacts.filter(contact=>contact.id !== action.payload)]};\r\n  },\r\n  [updateContact]:(state,action)=>{\r\n    return {...state,contacts:[...state.contacts.map(contact=>contact.id===action.payload ?\r\n    {...contact, update: !contact.update} : contact)]}\r\n  },\r\n  [changeAlert]:(state)=>{\r\n    return {...state,alert:!state.alert, repeatName:\"\"}\r\n  },\r\n  [resetSelected]:(state,action)=>{\r\n    return{...state,selectedContact:null}\r\n  },\r\n  [addToSelected]:(state,action)=>{\r\n    if(state.contacts.find(contact=>contact.id === action.payload)){\r\n      return {...state,selectedContact:{...state.contacts.find(contact=>contact.id === action.payload)}}\r\n    }else {\r\n      return state\r\n    }\r\n  },\r\n  [changeContact]:(state,action)=>{\r\n    return{...state,contacts:[...state.contacts.map(item=>item.id===action.payload.id ?\r\n          {...item,name:action.payload.name, number: action.payload.number,update:false}:{...item})]}\r\n  },\r\n  [getContacts]:(state,action)=>{\r\n    if(localStorage.getItem('contacts')){\r\n      const contactsFromStorage = JSON.parse(localStorage.getItem('contacts'));\r\n      return {...state,contacts:[...state.contacts,...contactsFromStorage]}\r\n      } else {\r\n      return state;\r\n      }\r\n  }\r\n});\r\n\r\nconst filterReducer = createReducer(\"\",{\r\n  [filterContacts]:(state,action)=>{\r\n    return state=action.payload\r\n  }\r\n});\r\n\r\n// ===================================================Redux===========================================\r\n\r\n// const bootCampReducer= createReducer({...initialState},{\r\n\r\n  //   [addNewCamp]:(state,action)=>{\r\n  //     if( state.bootCamps.some((item) => item.campName === action.payload.campName)) {\r\n  //     return { ...state, alert: !state.alert };\r\n  //   } else\r\n  //     return { ...state, bootCamps: [...state.bootCamps, action.payload] };\r\n  //   },\r\n\r\n  //   [deleteCamp]:(state,action)=>({\r\n  //     ...state,\r\n  //     bootCamps: [\r\n  //       ...state.bootCamps.filter((item) => item.id !== action.payload),\r\n  //     ],\r\n  //   }),\r\n\r\n  //     [setFilter]:(state,action)=>({\r\n  //       ...state,\r\n  //       filter: action.payload,\r\n  //     }),\r\n\r\n  //     [setAlert]:(state,action)=>({\r\n  //       ...state,\r\n  //       alert: !state.alert,\r\n\r\n  //     })\r\n\r\n  // });\r\n\r\n  // export default bootCampReducer;\r\n\r\n// const contactsReducer=(state={...initialState},action)=>{\r\n//   switch(action.type){\r\n\r\n//     case ADDCONTACT:\r\n//       if(state.contacts.some(contact=>contact.name.toLowerCase() === action.payload.name.toLowerCase())){\r\n//         localStorage.setItem('contacts',JSON.stringify([...state.contacts]))\r\n//         return {...state,alert:!state.alert,repeatName:action.payload.name};\r\n//       } else {\r\n//         localStorage.setItem('contacts',JSON.stringify([...state.contacts,action.payload]))\r\n//         return {...state,contacts:[...state.contacts,action.payload]};\r\n//       }\r\n\r\n//     case DELETECONTACT:\r\n//       localStorage.setItem('contacts', JSON.stringify([...state.contacts.filter(contact=>contact.id !== action.payload)]))\r\n//       return {...state,contacts:[...state.contacts.filter(contact=>contact.id !== action.payload)]};\r\n\r\n//     case UPDATECONTACT:\r\n//       return {...state,contacts:[...state.contacts.map(contact=>contact.id===action.payload ?\r\n//         {...contact, update: !contact.update} : contact)]}\r\n\r\n//     case ADDTOSELECTED:\r\n//       if(state.contacts.find(contact=>contact.id === action.payload)){\r\n//         return {...state,selectedContact:{...state.contacts.find(contact=>contact.id === action.payload)}}\r\n//       }\r\n//       else {\r\n//         return state\r\n//       }\r\n\r\n//     case RESETSELECTED:\r\n//       return{...state,selectedContact:null}\r\n\r\n//     case CHANGEALERT:\r\n//       return {...state,alert:!state.alert, repeatName:\"\"}\r\n\r\n//     case CHANGECONTACT:\r\n//       return{...state,contacts:[...state.contacts.map(item=>item.id===action.payload.id ?\r\n//         {...item,name:action.payload.name, number: action.payload.number,update:false}:{...item})]}\r\n\r\n//     case GETCONTACTS:\r\n//       if(localStorage.getItem('contacts')){\r\n//         const contactsFromStorage = JSON.parse(localStorage.getItem('contacts'));\r\n//         return {...state,contacts:[...state.contacts,...contactsFromStorage]}\r\n//       } else {\r\n//         return state;\r\n//       }\r\n\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer=(state=\"\",action)=>{\r\n//   switch(action.type){\r\n//     case FILTERCONTACT:\r\n//       return state=action.payload\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\nexport const rootReducer=combineReducers({\r\n  contactsArr: contactsReducer,\r\n  filterValue: filterReducer,\r\n})\r\n\r\n\r\n","import { createStore } from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {rootReducer} from './reducer/contactsReducer';\r\nimport {configureStore} from '@reduxjs/toolkit';\r\n\r\n// const store = createStore(phoneBookReducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-not-updated\":\"ListItem_text-not-updated__3EzDn\",\"text-updated\":\"ListItem_text-updated__CJdD1\",\"wrapper\":\"ListItem_wrapper__3HTGW\",\"updated\":\"ListItem_updated__2NMg6\",\"not-updated\":\"ListItem_not-updated__jn6dC\",\"inputHide\":\"ListItem_inputHide__2GO38\",\"button\":\"ListItem_button__ihGsL\",\"button-not-updated\":\"ListItem_button-not-updated__3eeWK\",\"button-updated\":\"ListItem_button-updated__1nXI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1sOOS\",\"label\":\"Form_label__1MMn2\",\"input\":\"Form_input__hRfPQ\",\"formButton\":\"Form_formButton__kGzg1\"};"],"sourceRoot":""}